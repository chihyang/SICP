(define (equal? list1 list2)
  (cond ((and (null? list1) (null? list2)) #t)
        ((or (null? list1) (null? list2)) #f)
        ((item-eq? (car list1) (car list2)) (equal? (cdr list1) (cdr list2)))
        (else #f)))
(define (item-eq? item1 item2)
  (cond ((and (list? item1) (list? item2)) (equal? item1 item2))
        ((not (and (list? item1) (list? item2))) (eq? item1 item2))
        (else #f)))
