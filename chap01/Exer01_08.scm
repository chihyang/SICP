(define (abs x)
    (cond ((< x 0) (- x))
          (else x)))
(define (square x)
    (* x x))
(define (average x y divisor)
    (/ (+ x y) divisor))
(define (improve guess x)
    (average (/ x (square guess)) (* 2 guess) 3))
(define (good-enough? guess next-guess)
    (< (abs (* (- guess next-guess) 1000)) guess))
(define (cbrt-iter guess x)
    (if (good-enough? guess (improve guess x))
        guess
        (cbrt-iter (improve guess x) x)))
(define (cbrt x)
    (cbrt-iter 1 x))
