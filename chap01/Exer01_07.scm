(define (abs x)
    (cond ((< x 0) (- x))
          (else x)))
(define (average x y)
    (/ (+ x y) 2))
(define (improve guess x)
    (average guess (/ x guess)))
(define (good-enough? guess last-guess)
    (< (abs (* (- guess last-guess) 1000)) guess))
(define (sqrt-iter guess x)
    (if (good-enough? guess (improve guess x))
        guess
        (sqrt-iter (improve guess x) x)))
(define (sqrt x)
    (sqrt-iter 1 x))
